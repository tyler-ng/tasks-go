name: Go API Test and Deploy
on:
  push:
    paths:
      - "tasks-go/**"
      - ".github/workflows/api.yml"

env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-west-1
  APP_ENVIRONMENT: development

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Install dependencies
        run: cd tasks-go && go mod download
      - name: Run tests
        run: cd tasks-go && go test -v -coverprofile=coverage.out ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tasks-go/coverage.out

  code-quality:
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
      - name: Run golangci-lint
        run: cd tasks-go && golangci-lint run ./...

  deploy-development:
    needs: [test, code-quality]
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.21.x]
        node-version: [22]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Install NPM dependencies
        run: cd tasks-go && npm install
      - name: Build Go binary
        run: cd tasks-go && make build
      - name: Deploy
        run: cd tasks-go && sls deploy --stage development --verbose
